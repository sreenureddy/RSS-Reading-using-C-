{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf820
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green150\blue149;\red34\green34\blue34;\red51\green99\blue164;
\red219\green113\blue0;\red136\green138\blue133;}
{\*\expandedcolortbl;;\csgenericrgb\c0\c58824\c58431;\csgenericrgb\c13333\c13333\c13333;\csgenericrgb\c20000\c38824\c64314;
\csgenericrgb\c85882\c44314\c0;\csgenericrgb\c53333\c54118\c52157;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 using\cf3  System.Data.SqlClient;\uc0\u8232 \cf2 using\cf3  System.Text;\uc0\u8232 \cf2 using\cf3  System;\uc0\u8232 \cf2 using\cf3  System.Xml;\uc0\u8232 \cf2 using\cf3  System.Collections.Generic;\uc0\u8232 \u8232 \cf2 namespace\cf3  test1\uc0\u8232 \{\u8232 	\cf2 class\cf3  \cf4 MainClass\uc0\u8232 \cf3 	\{\uc0\u8232 		\cf2 public\cf3  \cf2 static\cf3  \cf2 void\cf3  Main(\cf2 string\cf3 [] args)\uc0\u8232 		\{\u8232 			\cf4 Console\cf3 .WriteLine(\cf5 "Hello World!"\cf3 );\uc0\u8232 \u8232 			\cf2 string\cf3  p = ParseRssFile();\uc0\u8232 			\cf4 Console\cf3 .WriteLine(p);\uc0\u8232 		\}\u8232 \u8232 		\cf2 public\cf3  \cf2 static\cf3  \cf2 string\cf3  ParseRssFile()\uc0\u8232 		\{\u8232 \u8232 			\cf4 Console\cf3 .WriteLine(\cf5 "testing"\cf3 );\uc0\u8232 			\cf4 XmlDocument\cf3  rssXmlDoc = \cf2 new\cf3  \cf4 XmlDocument\cf3 ();\uc0\u8232 \u8232 			\cf6 // Load the RSS file from the RSS URL\uc0\u8232 \cf3 			rssXmlDoc.Load(\cf5 "http://www.turfclub.com.sg/_layouts/RssGeneration.aspx?ModuleName=RD"\cf3 );\uc0\u8232 \u8232 			\cf6 // Parse the Items in the RSS file\uc0\u8232 \cf3 			\cf4 XmlNodeList\cf3  rssNodes = rssXmlDoc.SelectNodes(\cf5 "rss/channel/item"\cf3 );\uc0\u8232 \u8232 			\cf4 StringBuilder\cf3  rssContent = \cf2 new\cf3  \cf4 StringBuilder\cf3 ();\uc0\u8232 \u8232 \u8232 \u8232 			\cf6 // Iterate through the items in the RSS file\uc0\u8232 \cf3 			\cf4 List\cf3 <\cf4 itemResult\cf3 > item = \cf2 new\cf3  \cf4 List\cf3 <\cf4 itemResult\cf3 >();\uc0\u8232 			\cf2 foreach\cf3  (\cf4 XmlNode\cf3  rssNode \cf2 in\cf3  rssNodes)\uc0\u8232 			\{\u8232 				\cf4 XmlNode\cf3  rssSubNode = rssNode.SelectSingleNode(\cf5 "title"\cf3 );\uc0\u8232 				\cf2 string\cf3  title = rssSubNode != \cf2 null\cf3  ? rssSubNode.InnerText : \cf5 ""\cf3 ;\uc0\u8232 \u8232 				rssSubNode = rssNode.SelectSingleNode(\cf5 "description"\cf3 );\uc0\u8232 				\cf2 string\cf3  description = rssSubNode != \cf2 null\cf3  ? rssSubNode.InnerText : \cf5 ""\cf3 ;\uc0\u8232 \u8232 				rssSubNode = rssNode.SelectSingleNode(\cf5 "link"\cf3 );\uc0\u8232 				\cf2 string\cf3  link = rssSubNode != \cf2 null\cf3  ? rssSubNode.InnerText : \cf5 ""\cf3 ;\uc0\u8232 \u8232 				rssSubNode = rssNode.SelectSingleNode(\cf5 "category"\cf3 );\uc0\u8232 				\cf2 string\cf3  category = rssSubNode != \cf2 null\cf3  ? rssSubNode.InnerText : \cf5 ""\cf3 ;\uc0\u8232 \u8232 				rssSubNode = rssNode.SelectSingleNode(\cf5 "guid"\cf3 );\uc0\u8232 				\cf2 string\cf3  guid = rssSubNode != \cf2 null\cf3  ? rssSubNode.InnerText : \cf5 ""\cf3 ;\uc0\u8232 \u8232 				rssSubNode = rssNode.SelectSingleNode(\cf5 "pubDate"\cf3 );\uc0\u8232 				\cf2 string\cf3  pubDate = rssSubNode != \cf2 null\cf3  ? rssSubNode.InnerText : \cf5 ""\cf3 ;\uc0\u8232 \u8232 				\cf4 itemResult\cf3  newIt = \cf2 new\cf3  \cf4 itemResult\cf3 ();\uc0\u8232 				newIt.title = title;\u8232 				newIt.decsription = description;\u8232 				newIt.link = link;\u8232 				newIt.category = category;\u8232 				newIt.guid = guid;\u8232 				newIt.gpubDate = pubDate;\u8232 \u8232 				item.Add(newIt);\u8232 \u8232 				\cf4 Console\cf3 .WriteLine(item.Count);\uc0\u8232 \u8232 \u8232 \u8232 			\}\u8232 \u8232 \u8232 			\cf6 //foreach (itemResult k in item) \{\uc0\u8232 \cf3 				\uc0\u8232 			\cf6 //	Insert(k.title, k.decsription, k.link, k.category, k.guid, k.gpubDate);\uc0\u8232 \cf3 			\cf6 //\}\uc0\u8232 \u8232 \u8232 \cf3 			\cf2 string\cf3  s = item[\cf5 3\cf3 ].decsription;\uc0\u8232 			\cf6 // Split string on spaces.\uc0\u8232 \cf3 			\cf6 // ... This will separate all the words.\uc0\u8232 \cf3 			\cf2 string\cf3 [] words = s.Split(\cf2 new\cf3  \cf2 string\cf3 [] \{ \cf5 "<br/>"\cf3  \}, \cf4 StringSplitOptions\cf3 .None);\uc0\u8232 			\cf2 int\cf3  k = words.Length;\uc0\u8232 			\cf4 Console\cf3 .WriteLine(\cf5 "----------"\cf3 );\uc0\u8232 \u8232 			\cf4 Console\cf3 .WriteLine(k);\uc0\u8232 \u8232 			\cf4 Console\cf3 .WriteLine(\cf5 "----------"\cf3 );\uc0\u8232 \u8232 			\cf4 Console\cf3 .WriteLine(words[\cf5 0\cf3 ]);\uc0\u8232 			\cf4 Console\cf3 .WriteLine(words[\cf5 1\cf3 ]);\uc0\u8232 			\cf4 Console\cf3 .WriteLine(words[\cf5 2\cf3 ]);\uc0\u8232 			\cf4 Console\cf3 .WriteLine(words[\cf5 3\cf3 ]);\uc0\u8232 			\cf4 Console\cf3 .WriteLine(\cf5 "----------"\cf3 );\uc0\u8232 \u8232 			\cf6 // Return the string that contain the RSS items\uc0\u8232 \cf3 			\cf2 return\cf3  \cf5 "hello C#"\cf3 ;\uc0\u8232 		\}\u8232 \u8232 		\cf2 public\cf3  \cf2 class\cf3  \cf4 raceResult\uc0\u8232 \cf3 		\{\uc0\u8232 			\cf2 public\cf3  \cf2 string\cf3  title \{ \cf2 get\cf3 ; \cf2 set\cf3 ; \}\uc0\u8232 			\cf2 public\cf3  \cf2 string\cf3  decsription \{ \cf2 get\cf3 ; \cf2 set\cf3 ; \}\uc0\u8232 			\cf2 public\cf3  \cf2 string\cf3  link \{ \cf2 get\cf3 ; \cf2 set\cf3 ; \}\uc0\u8232 			\cf2 public\cf3  \cf2 string\cf3  language \{ \cf2 get\cf3 ; \cf2 set\cf3 ; \}\uc0\u8232 			\cf2 public\cf3  \cf2 string\cf3  date \{ \cf2 get\cf3 ; \cf2 set\cf3 ; \}\uc0\u8232 			\cf2 public\cf3  \cf2 string\cf3  lastbuild \{ \cf2 get\cf3 ; \cf2 set\cf3 ; \}\uc0\u8232 \u8232 \u8232 		\}\u8232 \u8232 		\cf2 private\cf3  \cf2 class\cf3  \cf4 itemResult\uc0\u8232 \cf3 		\{\uc0\u8232 			\cf2 public\cf3  \cf2 string\cf3  title \{ \cf2 get\cf3 ; \cf2 set\cf3 ; \}\uc0\u8232 			\cf2 public\cf3  \cf2 string\cf3  decsription \{ \cf2 get\cf3 ; \cf2 set\cf3 ; \}\uc0\u8232 			\cf2 public\cf3  \cf2 string\cf3  link \{ \cf2 get\cf3 ; \cf2 set\cf3 ; \}\uc0\u8232 			\cf2 public\cf3  \cf2 string\cf3  category \{ \cf2 get\cf3 ; \cf2 set\cf3 ; \}\uc0\u8232 			\cf2 public\cf3  \cf2 string\cf3  guid \{ \cf2 get\cf3 ; \cf2 set\cf3 ; \}\uc0\u8232 			\cf2 public\cf3  \cf2 string\cf3  gpubDate \{ \cf2 get\cf3 ; \cf2 set\cf3 ; \}\uc0\u8232 \u8232 \u8232 		\}\u8232 \u8232 		\cf2 static\cf3  \cf2 void\cf3  Insert(\cf2 string\cf3  title, \cf2 string\cf3  description, \cf2 string\cf3  link,  \cf2 string\cf3  categorie, \cf2 string\cf3  guid, \cf2 string\cf3  pubdate)\uc0\u8232 		\{\u8232 			\cf2 try\uc0\u8232 \cf3 			\{\uc0\u8232 				\cf2 string\cf3  connectionString =\uc0\u8232 					\cf5 @"Server=192.168.0.7;Database=TestDatabase;User ID=Test;Password=Qwer~1"\cf3 ;\uc0\u8232 				\u8232 				\cf2 using\cf3  (\cf4 SqlConnection\cf3  conn = \uc0\u8232 				       \cf2 new\cf3  \cf4 SqlConnection\cf3 (connectionString)) \uc0\u8232 				\{\u8232 					conn.Open();\u8232 					\cf2 using\cf3  (\cf4 SqlCommand\cf3  cmd = \uc0\u8232 					       \cf2 new\cf3  \cf4 SqlCommand\cf3 (\cf5 "INSERT INTO Turf VALUES("\cf3  + \cf5 "@Title, @Description, @Link, @Categorie, @Guid, @PubDate)"\cf3 , conn))\uc0\u8232 					\{\u8232 						cmd.Parameters.AddWithValue(\cf5 "@Title"\cf3 , title);\uc0\u8232 						cmd.Parameters.AddWithValue(\cf5 "@Description"\cf3 , description);\uc0\u8232 						cmd.Parameters.AddWithValue(\cf5 "@LINK"\cf3 , link);\uc0\u8232 						cmd.Parameters.AddWithValue(\cf5 "@Categorie"\cf3 , categorie);\uc0\u8232 						cmd.Parameters.AddWithValue(\cf5 "@Guid"\cf3 , guid);\uc0\u8232 						cmd.Parameters.AddWithValue(\cf5 "@Pubdate"\cf3 , pubdate);\uc0\u8232 \u8232 						\cf2 int\cf3  rows = cmd.ExecuteNonQuery();\uc0\u8232 \u8232 						\cf6 // rows number of record got inserted\uc0\u8232 \cf3 					\}\uc0\u8232 					\u8232 				\}\u8232 			\}\u8232 			\cf2 catch\cf3  (\cf4 SqlException\cf3  ex)\uc0\u8232 			\{\u8232 				\cf4 Console\cf3 .WriteLine(ex);\uc0\u8232 			\}\u8232 			\u8232 		\}\u8232 \u8232 	\u8232 	\}\u8232 \}\u8232 \u8232 }